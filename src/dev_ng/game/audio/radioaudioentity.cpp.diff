diff --git a/src/dev_ng/game/audio/radioaudioentity.cpp b/src/dev_ng/game/audio/radioaudioentity.cpp
--- a/src/dev_ng/game/audio/radioaudioentity.cpp
+++ b/src/dev_ng/game/audio/radioaudioentity.cpp
@@ -14,7 +14,7 @@
 #include "camera/CamInterface.h"
 #include "camera/scripted/ScriptedFlyCamera.h"
 #include "cutsceneaudioentity.h"
-#include "frontendAudioEntity.h"
+#include "frontendaudioentity.h"
 #include "music/musicplayer.h"
 #include "northaudioengine.h"
 #include "radioaudioentity.h"
@@ -28,12 +28,12 @@
 #include "game/ModelIndices.h"
 #include "grcore/debugdraw.h"
 #include "network/NetworkInterface.h"
-#include "peds/ped.h"
-#include "peds/PedIntelligence.h"
+#include "Peds/ped.h"
+#include "Peds/PedIntelligence.h"
 #include "scene/playerswitch/PlayerSwitchInterface.h"
-#include "system/ControlMgr.h"
-#include "vehicles/vehicle.h"
-#include "vehicles/Metadata/VehicleSeatInfo.h"
+#include "system/controlMgr.h"
+#include "Vehicles/vehicle.h"
+#include "Vehicles/Metadata/VehicleSeatInfo.h"
 
 #if GTA_REPLAY
 #include "frontend/VideoEditor/Core/VideoProjectAudioTrackProvider.h"
@@ -3808,7 +3808,7 @@ void ForceNextPlayerStation()
 	}	
 }
 
-#if __WIN32PC // user music
+#if __WIN32PC && !__LINUX // user music
 void NextTrackCB()
 {
 	audRadioStation::FindStation("RADIO_19_USER")->NextTrack();
@@ -3859,7 +3859,7 @@ void audRadioAudioEntity::AddWidgets(bkBank &bank)
 		bank.AddSlider("RadioPositionedToStereoTime", &g_RadioPositionedToStereoTime, 0.f, 10000.f, 0.01f);
 		bank.AddToggle("Enable Positioned Player Radio", &g_PositionedPlayerVehicleRadioEnabled);		
 
-#if __WIN32PC // user music
+#if __WIN32PC && !__LINUX // user music
 		bank.PushGroup("User Music", false);
 			bank.AddToggle("Show User Music Data", &g_RadioAudioEntity.sm_DebugUserMusic);
 			bank.AddButton("NextTrack", CFA(NextTrackCB));

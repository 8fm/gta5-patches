diff --git a/src/dev_ng/game/Core/gamesessionstatemachine.cpp b/src/dev_ng/game/Core/gamesessionstatemachine.cpp
--- a/src/dev_ng/game/Core/gamesessionstatemachine.cpp
+++ b/src/dev_ng/game/Core/gamesessionstatemachine.cpp
@@ -3,7 +3,7 @@
 // description:	Class controlling all the game code
 //
 
-#include "core/gamesessionstatemachine.h"
+#include "Core/gamesessionstatemachine.h"
 
 // rage headers
 #include "bank/msgbox.h"
@@ -21,30 +21,30 @@
 #include "camera/viewports/ViewportManager.h"
 #include "control/gamelogic.h"
 #include "control/ScriptRouterLink.h"
-#include "core/game.h"
-#include "core/core_channel.h"
+#include "Core/game.h"
+#include "Core/core_channel.h"
 #include "frontend/CSettingsMenu.h"
 #include "frontend/DisplayCalibration.h"
 #include "frontend/GameStreamMgr.h"
 #include "frontend/landing_page/LandingPageArbiter.h"
-#include "frontend/languageselect.h"
+#include "frontend/LanguageSelect.h"
 #include "frontend/loadingscreens.h"
 #include "frontend/WarningScreen.h"
 #include "frontend/ProfileSettings.h"
 #include "frontend/Scaleform/ScaleFormStore.h"
-#include "game/modelindices.h"
+#include "game/ModelIndices.h"
 #include "network/Live/livemanager.h"
-#include "network/network.h"
+#include "network/Network.h"
 #include "network/NetworkInterface.h"
 #include "rline/rlsystemui.h"
-#include "saveload/genericgamestorage.h"
-#include "saveload/savegame_autoload.h"
+#include "SaveLoad/GenericGameStorage.h"
+#include "SaveLoad/savegame_autoload.h"
 #include "SaveLoad/savegame_frontend.h"
-#include "saveload/savegame_list.h"
-#include "saveload/savegame_load.h"
+#include "SaveLoad/savegame_list.h"
+#include "SaveLoad/savegame_load.h"
 #include "security/yubikey/yubikeymanager.h"
 #include "streaming/streamingvisualize.h"
-#include "system/controlmgr.h"
+#include "system/controlMgr.h"
 #include "system/EndUserBenchmark.h"
 #include "system/EntitlementManager.h"
 #include "system/param.h"
@@ -79,7 +79,7 @@ PARAM(skipLandingPage, "Skip over the Landing Page");
 #endif
 
 #if RSG_PC
-#include "core/app.h"
+#include "Core/app.h"
 #endif // RSG_PC
 
 #if __WIN32PC
@@ -107,7 +107,7 @@ CGameSessionStateMachine::~CGameSessionStateMachine()
 {
 }
 
-#if RSG_PC
+#if RSG_PC && !RSG_LINUX
 static bool is_SCui_showing()
 {
 	return g_rlPc.IsUiShowing();
@@ -123,7 +123,7 @@ void CGameSessionStateMachine::Init()
 #if RAGE_SEC_ENABLE_YUBIKEY
 	SetState(TWO_FACTOR_AUTH_CHECK);
 #else
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 	SetState(CHECK_FOR_RGSC);
 	GRCDEVICE.CursorVisibilityOverride = is_SCui_showing;
 #else
@@ -241,6 +241,7 @@ void CGameSessionStateMachine::ProcessReInitState()
 
 void CGameSessionStateMachine::ProcessCheckForRGSC()
 {
+#if !RSG_LINUX
 	// Check for noSocialClub
 #if !__FINAL || defined(MASTER_NO_SCUI)
 	if (PARAM_noSocialClub.Get())
@@ -259,6 +260,7 @@ void CGameSessionStateMachine::ProcessCheckForRGSC()
 		SetState(HANDLE_RGSC_FAILED);
 	}
 	else
+#endif // !RSG_LINUX
 	{
 		// RGSC Successful, continue with autoload
 #if __STEAM_BUILD
@@ -271,6 +273,7 @@ void CGameSessionStateMachine::ProcessCheckForRGSC()
 
 void CGameSessionStateMachine::ProcessRGSCFailed()
 {
+#if !RSG_LINUX
 	// Stop here
 	while(true)
 	{
@@ -381,6 +384,7 @@ void CGameSessionStateMachine::ProcessRGSCFailed()
 		UpdateInitialDialogueScreensOnly();
 		gRenderThreadInterface.FlushAndDeviceCheck();
 	}
+#endif // !RSG_LINUX
 }
 
 #if __STEAM_BUILD
@@ -724,9 +728,9 @@ void CGameSessionStateMachine::ProcessCheckSignInState()
 #if defined(MASTER_NO_SCUI) || !__FINAL
 #if defined(MASTER_NO_SCUI)
 	if (PARAM_noSocialClub.Get())
-#elif !__FINAL && __WIN32PC
+#elif !__FINAL && __WIN32PC && !__LINUX
 	if(PARAM_noprofilesignin.Get() || PARAM_noSocialClub.Get() || PARAM_unattended.Get())
-#elif !__FINAL && !__WIN32PC
+#elif !__FINAL && (!__WIN32PC || __LINUX)
 	if(PARAM_noprofilesignin.Get() || PARAM_unattended.Get())
 #endif
 	{

diff --git a/src/dev_ng/game/script/commands_pad.cpp b/src/dev_ng/game/script/commands_pad.cpp
--- a/src/dev_ng/game/script/commands_pad.cpp
+++ b/src/dev_ng/game/script/commands_pad.cpp
@@ -8,13 +8,13 @@
 #include "script/commands_hud.h"
 #include "script/script.h"
 #include "script/script_helper.h"
-#include "scene/world/gameWorld.h"
+#include "scene/world/GameWorld.h"
 #include "system/controlMgr.h"
 #include "system/control.h"
 #include "system/pad.h"
-#include "text/textformat.h"
-#include "peds/ped.h"
-#include "peds/PedWeapons/PedTargetEvaluator.h"
+#include "text/TextFormat.h"
+#include "Peds/ped.h"
+#include "Peds/PedWeapons/PedTargetEvaluator.h"
 #include "script/script_hud.h"
 #include "script/thread.h"
 #include "math/amath.h"
@@ -1450,7 +1450,7 @@ void CommandDisableControlButton(int control, int ButtonNumber)
 
 bool CommandInitPCScriptedControls(const char * WIN32PC_ONLY(schemeName))
 {
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 	return CControlMgr::GetPlayerMappingControl().LoadPCScriptControlMappings(atHashString(schemeName));
 #else
 	return true;
@@ -1459,7 +1459,7 @@ bool CommandInitPCScriptedControls(const char * WIN32PC_ONLY(schemeName))
 
 bool CommandSwitchPCScriptedControls(const char * WIN32PC_ONLY(schemeName))
 {
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 	return CControlMgr::GetPlayerMappingControl().SwitchPCScriptControlMappings(atHashString(schemeName));
 #else
 	return true;
@@ -1468,7 +1468,9 @@ bool CommandSwitchPCScriptedControls(const char * WIN32PC_ONLY(schemeName))
 
 void CommandShutdownPCScriptedControls()
 {
-	WIN32PC_ONLY(CControlMgr::GetPlayerMappingControl().ShutdownPCScriptControlMappings());
+#if __WIN32PC && !__LINUX
+	CControlMgr::GetPlayerMappingControl().ShutdownPCScriptControlMappings();
+#endif
 }
 
 void CommandAllowAlternativeScriptControlsLayout(int control)

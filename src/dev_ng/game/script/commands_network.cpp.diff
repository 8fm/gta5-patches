diff --git a/src/dev_ng/game/script/commands_network.cpp b/src/dev_ng/game/script/commands_network.cpp
--- a/src/dev_ng/game/script/commands_network.cpp
+++ b/src/dev_ng/game/script/commands_network.cpp
@@ -1,4 +1,4 @@
-#if RSG_PC
+#if RSG_PC && !RSG_LINUX
 #include <tchar.h>
 #endif
 
@@ -20,32 +20,32 @@
 #include "fwanimation/directorcomponentsyncedscene.h"
 #include "fwnet/netarrayhandler.h"
 #include "fwnet/neteventmgr.h"
-#include "fwnet/netscgamerdatamgr.h"
+#include "fwnet/netscgamerDataMgr.h"
 #include "fwscript/scriptinterface.h"
 
 // Game headers
 #include "script/commands_network.h"
 #include "control/gamelogic.h"
 #include "control/restart.h"
-#include "Core/Game.h"
+#include "Core/game.h"
 #include "game/BackgroundScripts/BackgroundScripts.h"
 #include "game/Clock.h"
 #include "game/weather.h"
 #include "Objects/Door.h"
-#include "peds/Ped.h"
-#include "pedgroup/pedgroup.h"
-#include "peds/pedplacement.h"
-#include "peds/rendering/PedOverlay.h"
-#include "physics/WorldProbe/worldprobe.h"
+#include "Peds/ped.h"
+#include "PedGroup/PedGroup.h"
+#include "Peds/pedplacement.h"
+#include "Peds/rendering/PedOverlay.h"
+#include "physics/WorldProbe/WorldProbe.h"
 #include "pickups/PickupManager.h"
 #include "SaveLoad/GenericGameStorage.h"
 #include "scene/DownloadableTextureManager.h"
 #include "scene/ExtraContent.h"
 #include "scene/portals/Portal.h"
-#include "scene/world/gameWorld.h"
-#include "script/handlers/GameScriptEntity.h"
-#include "script/handlers/GameScriptHandler.h"
-#include "script/handlers/GameScriptResources.h"
+#include "scene/world/GameWorld.h"
+#include "script/Handlers/GameScriptEntity.h"
+#include "script/Handlers/GameScriptHandler.h"
+#include "script/Handlers/GameScriptResources.h"
 #include "script/script.h"
 #include "script/script_brains.h"
 #include "script/script_cars_and_peds.h"
@@ -56,60 +56,60 @@
 #include "frontend/WarningScreen.h"
 #include "frontend/PauseMenu.h"
 #include "frontend/CFriendsMenu.h"
-#include "vehicles/vehicle.h"
-#include "vehicles/heli.h"
-#include "Script/script_channel.h"
+#include "Vehicles/vehicle.h"
+#include "Vehicles/Heli.h"
+#include "script/script_channel.h"
 #include "script/script_hud.h"
 #include "task/Animation/TaskCutScene.h"
-#include "Task/Motion/TaskMotionBase.h"
-#include "Task/Movement/TaskParachute.h"
-#include "peds/PedIntelligence.h"
-#include "stats/StatsTypes.h"
-#include "stats/StatsMgr.h"
-#include "stats/StatsDataMgr.h"
-#include "stats/StatsInterface.h"
+#include "task/Motion/TaskMotionBase.h"
+#include "task/Movement/TaskParachute.h"
+#include "Peds/PedIntelligence.h"
+#include "Stats/StatsTypes.h"
+#include "Stats/StatsMgr.h"
+#include "Stats/StatsDataMgr.h"
+#include "Stats/StatsInterface.h"
 #include "text/text.h"
 
 // Network Headers
-#include "Network/NetworkTypes.h"
-#include "Network/Network.h"
-#include "Network/Arrays/NetworkArrayMgr.h"
-#include "Network/Arrays/NetworkArrayMgr.h"
-#include "Network/Cloud/CloudManager.h"
-#include "Network/Cloud/Tunables.h"
-#include "Network/Cloud/UserContentManager.h"
-#include "Network/Crews/NetworkCrewMetadata.h"
-#include "Network/Debug/NetworkSoakTests.h"
-#include "Network/Events/NetworkEventTypes.h"
+#include "network/NetworkTypes.h"
+#include "network/Network.h"
+#include "network/Arrays/NetworkArrayMgr.h"
+#include "network/Arrays/NetworkArrayMgr.h"
+#include "network/Cloud/CloudManager.h"
+#include "network/Cloud/Tunables.h"
+#include "network/Cloud/UserContentManager.h"
+#include "network/Crews/NetworkCrewMetadata.h"
+#include "network/Debug/NetworkSoakTests.h"
+#include "network/Events/NetworkEventTypes.h"
 #include "network/General/NetworkDamageTracker.h"
-#include "network/general/NetworkFakePlayerNames.h"
-#include "Network/General/NetworkHasherUtil.h"
-#include "Network/General/NetworkUtil.h"
-#include "Network/General/NetworkScratchpad.h"
-#include "Network/General/NetworkSynchronisedScene.h"
-#include "network/general/scriptworldstate/worldstates/NetworkRopeWorldState.h"
-#include "network/general/scriptworldstate/worldstates/NetworkEntityAreaWorldState.h"
-#include "Network/Live/livemanager.h"
-#include "Network/Live/NetworkRemoteCheaterDetector.h"
-#include "Network/Live/NetworkRichPresence.h"
-#include "Network/Live/NetworkSCPresenceUtil.h"
-#include "Network/Live/NetworkMetrics.h"
-#include "Network/Live/NetworkTelemetry.h"
-#include "Network/Objects/NetworkObjectMgr.h"
-#include "Network/Objects/NetworkObjectPopulationMgr.h"
-#include "Network/Objects/Entities/NetObjAutomobile.h"
-#include "Network/Objects/Entities/NetObjPlayer.h"
-#include "Network/Objects/Entities/NetObjSubmarine.h"
-#include "network/objects/prediction/NetBlenderPed.h"
-#include "network/objects/prediction/NetBlenderVehicle.h"
-#include "Network/Players/NetGamePlayer.h"
-#include "Network/Sessions/NetworkGameConfig.h"
-#include "Network/Sessions/NetworkSession.h"
-#include "Network/Sessions/NetworkVoiceSession.h"
-#include "Network/Voice/NetworkVoice.h"
-#include "Network/NetworkInterface.h"
+#include "network/General/NetworkFakePlayerNames.h"
+#include "network/General/NetworkHasherUtil.h"
+#include "network/General/NetworkUtil.h"
+#include "network/General/NetworkScratchpad.h"
+#include "network/General/NetworkSynchronisedScene.h"
+#include "network/General/ScriptWorldState/WorldStates/NetworkRopeWorldState.h"
+#include "network/General/ScriptWorldState/WorldStates/NetworkEntityAreaWorldState.h"
+#include "network/Live/livemanager.h"
+#include "network/Live/NetworkRemoteCheaterDetector.h"
+#include "network/Live/NetworkRichPresence.h"
+#include "network/Live/NetworkSCPresenceUtil.h"
+#include "network/Live/NetworkMetrics.h"
+#include "network/Live/NetworkTelemetry.h"
+#include "network/Objects/NetworkObjectMgr.h"
+#include "network/Objects/NetworkObjectPopulationMgr.h"
+#include "network/Objects/Entities/NetObjAutomobile.h"
+#include "network/Objects/Entities/NetObjPlayer.h"
+#include "network/Objects/Entities/NetObjSubmarine.h"
+#include "network/Objects/Prediction/NetBlenderPed.h"
+#include "network/Objects/Prediction/NetBlenderVehicle.h"
+#include "network/Players/NetGamePlayer.h"
+#include "network/Sessions/NetworkGameConfig.h"
+#include "network/Sessions/NetworkSession.h"
+#include "network/Sessions/NetworkVoiceSession.h"
+#include "network/Voice/NetworkVoice.h"
+#include "network/NetworkInterface.h"
 #include "network/Debug/NetworkBot.h"
-#include "Network/Live/NetworkClan.h"
+#include "network/Live/NetworkClan.h"
 #include "network/xlast/presenceutil.h"
 
 #include <time.h>
@@ -119,7 +119,7 @@
 #endif // RSG_PC
 
 #if __DEV
-#include "Script/commands_debug.h"
+#include "script/commands_debug.h"
 #include "debug/DebugScene.h"
 #endif // __DEV
 
@@ -438,7 +438,7 @@ bool CommandNetworkIsGuest()
 
 bool CommandNetworkIsScOfflineMode()
 {
-#if RSG_PC
+#if RSG_PC && !RSG_LINUX
 	return g_rlPc.GetUiInterface()->IsReadyToAcceptCommands() && g_rlPc.GetUiInterface()->IsOfflineMode();
 #else
 	return false;
@@ -6574,7 +6574,7 @@ bool CommandNetworkPlayerIsRockstarDev(int nPlayerIndex)
 }
 
 #if (RSG_CPU_X86 || RSG_CPU_X64) && RSG_PC
-__declspec(noinline) bool CommandNetworkPlayerIsCheater(int nPlayerIndex)
+ROCKY_NOINLINE bool CommandNetworkPlayerIsCheater(int nPlayerIndex)
 #else
 bool CommandNetworkPlayerIsCheater(int nPlayerIndex)
 #endif
@@ -7286,14 +7286,14 @@ void CommandNetworkRemainInGameChat(const bool bRemainInGameChat)
 
 void CommandNetworkSetScriptControllingTeams(const bool WIN32PC_ONLY(bOverride))
 {
-	#if RSG_PC
+	#if RSG_PC && !RSG_LINUX
 	NetworkInterface::GetTextChat().SetScriptControllingTeams(bOverride);
 	#endif
 }
 
 bool CommandNetworkSetonSameTeamForText(const int WIN32PC_ONLY(playerIndex), const bool WIN32PC_ONLY(bSameTeam) )
 {
-#if RSG_PC
+#if RSG_PC && !RSG_LINUX
 
 	if (!NetworkInterface::GetTextChat().GetScriptControllingTeams())
 		return false;
@@ -7346,7 +7346,7 @@ void CommandNetworkSetTeamOnlyChat(const bool teamOnlyChat)
 
 void CommandNetworkSetTeamOnlyTextChat(const bool WIN32PC_ONLY(teamOnlyChat))
 {
-#if RSG_PC
+#if RSG_PC && !RSG_LINUX
 	WriteToScriptLogFile(SCRIPTLOG_ALWAYS, "NETWORK_SET_TEAM_ONLY_TEXT_CHAT");
 	NetworkInterface::GetTextChat().SetTeamOnlyChat(teamOnlyChat);
 #endif
@@ -7567,7 +7567,7 @@ void CommandNetworkDisableVoiceBandwidthRestriction(const int playerIndex)
 
 void CommandNetworkSetSpectatorToNonSpectatorTextChat(const bool WIN32PC_ONLY(isEnabled))
 {
-#if RSG_PC
+#if RSG_PC && !RSG_LINUX
 	NetworkInterface::GetTextChat().SetSpectatorToNonSpectatorChat(isEnabled);
 #endif // RSG_PC
 }
@@ -14562,7 +14562,7 @@ bool CommandCheckForStoreAge()
 }
 
 #if (RSG_CPU_X86 || RSG_CPU_X64) && RSG_PC
-__declspec(noinline) bool CommandNetworkIsCheater()
+ROCKY_NOINLINE bool CommandNetworkIsCheater()
 #else
 bool CommandNetworkIsCheater()
 #endif
@@ -16755,7 +16755,7 @@ bool CommandIsTitleUpdateRequired()
 void  CommandNetworkQuitMultiplayerToDesktop()
 {
 	scriptDebugf1("%s:NETWORK_QUIT_MP_TO_DESKTOP - Called.", CTheScripts::GetCurrentScriptNameAndProgramCounter());
-#if RSG_PC
+#if RSG_PC && !RSG_LINUX
 	NetworkInterface::GetNetworkExitFlow().StartExitSaveFlow();
 #else
 	scriptAssertf(0, "%s:NETWORK_QUIT_MP_TO_DESKTOP - This function is PC only", CTheScripts::GetCurrentScriptNameAndProgramCounter());

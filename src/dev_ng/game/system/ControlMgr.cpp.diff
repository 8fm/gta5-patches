diff --git a/src/dev_ng/game/system/ControlMgr.cpp b/src/dev_ng/game/system/ControlMgr.cpp
--- a/src/dev_ng/game/system/ControlMgr.cpp
+++ b/src/dev_ng/game/system/ControlMgr.cpp
@@ -16,25 +16,25 @@
 #include "system/userlist.h"
 
 // game headers
-#include "core/game.h"
+#include "Core/game.h"
 #include "SaveLoad/savegame_autoload.h"
 #include "script/script_debug.h"	//	for CScriptDebug::GetDisableDebugCamAndPlayerWarping()
-#include "system/controlmgr.h"
-#include "debug/debug.h"
-#include "Frontend/NewHud.h"
-#include "Frontend/PauseMenu.h"
-#include "Frontend/WarningScreen.h" 
-#include "Peds/Ped.h"
+#include "system/controlMgr.h"
+#include "debug/Debug.h"
+#include "frontend/NewHud.h"
+#include "frontend/PauseMenu.h"
+#include "frontend/WarningScreen.h" 
+#include "Peds/ped.h"
 #include "scene/playerswitch/PlayerSwitchInterface.h"
-#include "scene/world/gameWorld.h"
+#include "scene/world/GameWorld.h"
 #include "script/script_debug.h"
 #include "text/messages.h"
-#include "Network/live/livemanager.h"
-#include "Network/NetworkInterface.h"
+#include "network/Live/livemanager.h"
+#include "network/NetworkInterface.h"
 #include "camera/CamInterface.h"
 #include "camera/viewports/Viewport.h"
 #include "camera/viewports/ViewportManager.h"
-#include "Network/NetworkInterface.h"
+#include "network/NetworkInterface.h"
 #include "system/system.h"
 #include "control/replay/replay.h"
 #include "control/videorecording/videorecording.h"
@@ -529,6 +529,7 @@ void CControlMgr::SetMainPlayerIndex(s32 index)
 
 void CControlMgr::UpdateScuiInput()
 {
+#if !RSG_LINUX
 	// SCUI input cannot be updated until the rlPC GamePad Manager is initialized
 	if (g_rlPc.GetGamepadManager() == NULL)
 		return;
@@ -557,6 +558,7 @@ void CControlMgr::UpdateScuiInput()
 			scuiPad->SetHasInput();
 		}
 	}
+#endif // !RSG_LINUX
 }
 #endif // RSG_PC
 //
@@ -586,7 +588,7 @@ void CControlMgr::Update()
 	
 	bool bIgnoreInput = RSG_PC ? (CLiveManager::IsInitialized() && CLiveManager::IsSystemUiShowing()) : false;
 
-#if RSG_PC
+#if RSG_PC && !RSG_LINUX
 	// On PC, we need to update padInput because the SCUI uses it even when on screen.
 	// Otherwise, ignore mouse and keyboard when the SCUI is up.
 	::rage::INPUT.Update(false, bIgnoreInput, bIgnoreInput, !__WIN32PC);
@@ -1446,7 +1448,7 @@ void CControlMgr::InitWidgets()
 	bank.PopGroup();
 
 // for now we are only adding mapping widgets to pc version.
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 	// now add the mappings controls.
 	bank.PushGroup("Input Mapping");
 	m_controls[CONTROL_MAIN_PLAYER].InitMappingWidgets(bank);

diff --git a/src/dev_ng/game/system/system.cpp b/src/dev_ng/game/system/system.cpp
--- a/src/dev_ng/game/system/system.cpp
+++ b/src/dev_ng/game/system/system.cpp
@@ -50,7 +50,7 @@ namespace rage
 #include "grmodel/setup.h"
 #include "grmodel/shader.h"
 #include "move/move.h"
-#include "network/Live/LiveManager.h"
+#include "network/Live/livemanager.h"
 #include "network/Live/NetworkTelemetry.h"
 #include "paging/dictionary.h"
 #include "paging/streamer.h"
@@ -67,7 +67,7 @@ namespace rage
 #include "system/bootmgr.h"
 #include "system/memory.h"
 #include "system/param.h"
-#include "system/systeminfo.h"
+#include "system/SystemInfo.h"
 #include "system/task.h"
 #include "system/threadregistry.h"
 #include "system/timemgr.h"
@@ -87,7 +87,7 @@ namespace rage
 #include "camera/CamInterface.h"
 #include "control/replay/replay.h"
 #include "control/videorecording/videorecording.h"
-#include "core/game.h"
+#include "Core/game.h"
 #include "debug/AutomatedTest.h"
 #include "debug/BudgetDisplay.h"
 #include "debug/GtaPicker.h"
@@ -98,21 +98,21 @@ namespace rage
 #include "Peds/pedDefines.h"				// For setting MAXNOOFPEDS from configuration file.
 #include "renderer/DrawLists/drawList.h"
 #include "renderer/DrawLists/drawListMgr.h"
-#include "renderer/renderThread.h"
-#include "renderer/lights/lights.h"
+#include "renderer/RenderThread.h"
+#include "renderer/Lights/lights.h"
 #include "renderer/OcclusionQueries.h"
 #include "renderer/RenderPhases/RenderPhaseCascadeShadows.h"
-#include "shaders/shaderlib.h"
+#include "shaders/ShaderLib.h"
 #include "streaming/streaming.h" 
 #include "streaming/streamingvisualize.h" 
-#include "system/controlmgr.h"
-#include "system/filemgr.h"
+#include "system/controlMgr.h"
+#include "system/FileMgr.h"
 #include "system/SettingsManager.h"
-#include "system/threadpriorities.h"
+#include "system/ThreadPriorities.h"
 #include "streaming/streamingdefs.h"
 #include "timecycle/TimeCycle.h"
 #include "tools/SmokeTest.h"
-#include "Renderer/PostProcessFX.h"
+#include "renderer/PostProcessFX.h"
 #include "vfx/misc/MovieManager.h"
 #include "renderer/Util/RenderDocManager.h"
 
@@ -131,7 +131,7 @@ extern "C" int snIsDebuggerRunning (void);
 #include "vfx/particles/PtFxManager.h"
 
 #if !__NO_OUTPUT
-#include "Debug/Debug.h"
+#include "debug/Debug.h"
 #endif	//!__NO_OUTPUT
 
 #define FORCE_FRAME_LIMIT (RSG_PC||RSG_DURANGO) // Please do not set this based on !RSG_FINAL -- that just leads to trouble
@@ -255,7 +255,7 @@ void dlCmdEndRender::ExecuteStatic(dlCmdBase &)
 #endif // FORCE_FRAME_LIMIT
 static sysTimer gFrameTimer;
 
-#if __D3D && __WIN32PC
+#if __D3D && __WIN32PC && !__LINUX
 static D3DDEVINFO_RESOURCEMANAGER  gD3dResourceData;
 #endif
 
@@ -273,7 +273,7 @@ __THREAD bool gb_mainThread = false;
 
 void SetWindowsSystemParameters()
 {
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 	SystemParametersInfo(SPI_SETSCREENSAVEACTIVE, FALSE, NULL, 0);
 #endif
 }
@@ -611,7 +611,7 @@ bool CSystem::Init(const char* pAppName)
 		GRCDEVICE.SetLetterBox(false);
 #endif
 
-#if __WIN32PC && __BANK
+#if __WIN32PC && __BANK && !__LINUX
 	// Our "native" windows are incompatible with render thread owning the D3D device.  Use RAG or local widgets.
 	bkWidget::DisableWindows();
 #endif
@@ -678,13 +678,13 @@ bool CSystem::Init(const char* pAppName)
 		gRenderThreadInterface.Init(PRIO_RENDER_THREAD,RenderThreadInit);
 
 		CSystem::ClearThisThreadId(SYS_THREAD_RENDER); // this is no longer the render thread
-#if __BANK && RSG_PC
+#if __BANK && RSG_PC && !RSG_LINUX
 		grcResourceCache::GetInstance().InitWidgets();
 #endif // __BANK
 
 	}
 
-#if RSG_PC
+#if RSG_PC && !RSG_LINUX
 	VideoResManager::Init();
 
 	if(!CHudTools::GetWideScreen())

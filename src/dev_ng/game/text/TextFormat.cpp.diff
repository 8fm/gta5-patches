diff --git a/src/dev_ng/game/text/TextFormat.cpp b/src/dev_ng/game/text/TextFormat.cpp
--- a/src/dev_ng/game/text/TextFormat.cpp
+++ b/src/dev_ng/game/text/TextFormat.cpp
@@ -19,16 +19,16 @@
 #include "string/string.h"
 #include "string/unicode.h"
 
-#include "Text/TextFormat.h"
+#include "text/TextFormat.h"
 
-#include "Text/TextConversion.h"
+#include "text/TextConversion.h"
 
 #include "renderer/sprite2d.h"
-#include "renderer/DrawLists/DrawListMgr.h"
+#include "renderer/DrawLists/drawListMgr.h"
 #include "renderer/PostProcessFXHelper.h"
-#include "renderer/RenderTargets.h"
-#include "replaycoordinator/Storage/MontageText.h"
-#include "system/controlmgr.h"  // mapper stuff
+#include "renderer/rendertargets.h"
+#include "replaycoordinator/storage/MontageText.h"
+#include "system/controlMgr.h"  // mapper stuff
 #include "system/param.h"
 #include "shaders/ShaderLib.h"
 
@@ -3107,7 +3107,8 @@ bool CTextFormat::Icon::GetIconText(char* buffer, u32 bufferSize, const IconPara
 		}
 	}
 	else if(m_Type == KEYCODE_ID)
-	{		
+	{
+#if !RSG_LINUX
 		const CControl::KeyInfo& info = CControl::GetKeyInfo(m_IconId);
 		Assertf(info.m_Icon != CControl::KeyInfo::INVALID_ICON || m_IconId == KEY_NULL, "Invalid key icon for keycode %u", m_IconId);
 
@@ -3129,6 +3130,7 @@ bool CTextFormat::Icon::GetIconText(char* buffer, u32 bufferSize, const IconPara
 		{
 			formatf(buffer, bufferSize, KEYBOARD_ICON_FMT "%u", info.m_Icon);
 		}
+#endif // !RSG_LINUX
 
 		return true;
 	}

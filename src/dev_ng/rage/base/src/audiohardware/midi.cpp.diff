diff --git a/src/dev_ng/rage/base/src/audiohardware/midi.cpp b/src/dev_ng/rage/base/src/audiohardware/midi.cpp
--- a/src/dev_ng/rage/base/src/audiohardware/midi.cpp
+++ b/src/dev_ng/rage/base/src/audiohardware/midi.cpp
@@ -2,7 +2,7 @@
 #include "audiohardware/channel.h"
 #include "midi.h"
 
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 #include "mmsystem.h"
 #endif // __WIN32PC
 
@@ -21,7 +21,7 @@ namespace rage
 
 	s32 audMidiIn::GetNumDevices()
 	{
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 		return static_cast<s32>(midiInGetNumDevs());
 #else
 		return 0;
@@ -32,7 +32,7 @@ namespace rage
 	{
 		m_WriteQueueId = 0;
 
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 		m_Handle = NULL;
 
 		formatf(m_Name, "No Device (%d)", deviceId);
@@ -66,7 +66,7 @@ namespace rage
 
 	void audMidiIn::Shutdown()
 	{
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 		if (m_Handle)
 		{
 			midiInClose(m_Handle);
@@ -77,7 +77,7 @@ namespace rage
 
 	const char *audMidiIn::GetName() const
 	{
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 		return m_Name;
 #else
 		return NULL;
@@ -136,7 +136,7 @@ namespace rage
 		m_WriteQueueId = (1+m_WriteQueueId)&1;
 	}
 
-#if __WIN32PC
+#if __WIN32PC && !__LINUX
 	void audMidiIn::MidiInProc(HMIDIIN UNUSED_PARAM(HMIDIIN), UINT wMsg, DWORD_PTR dwInstance, DWORD_PTR dwParam1, DWORD_PTR dwParam2)
 	{
 		audMidiMessage message;

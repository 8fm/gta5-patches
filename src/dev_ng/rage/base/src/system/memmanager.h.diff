diff --git a/src/dev_ng/rage/base/src/system/memmanager.h b/src/dev_ng/rage/base/src/system/memmanager.h
--- a/src/dev_ng/rage/base/src/system/memmanager.h
+++ b/src/dev_ng/rage/base/src/system/memmanager.h
@@ -106,7 +106,7 @@ private:
 	sysMemSystemTracker* m_pSystemTracker;
 #endif
 
-#if RSG_DURANGO || RSG_ORBIS || RSG_PC
+#if RSG_DURANGO || RSG_ORBIS || RSG_PC || RSG_LINUX
 	sysMemSimpleAllocator* m_pReplayAllocator;
 #endif
 
@@ -122,7 +122,7 @@ private:
 	sysMemSimpleAllocator* m_pFlexAllocator;
 #endif
 
-#if !__FINAL && (RSG_ORBIS || RSG_DURANGO || RSG_PC)
+#if !__FINAL && (RSG_ORBIS || RSG_DURANGO || RSG_PC || RSG_LINUX)
 	sysMemSimpleAllocator* m_pHemlisAllocator;
 	sysMemSimpleAllocator* m_pRecorderAllocator;
 #endif
@@ -186,7 +186,7 @@ public:
 	inline void* GetGlobalScriptMemory() {return m_pGlobalScriptMemory;}
 	inline void SetGlobalScriptMemory(void* const pMemory) {m_pGlobalScriptMemory = pMemory;}
 
-#if !__FINAL && (RSG_ORBIS || RSG_DURANGO || RSG_PC)
+#if !__FINAL && (RSG_ORBIS || RSG_DURANGO || RSG_PC || RSG_LINUX)
 #if (RSG_ORBIS || RSG_DURANGO)	
 	// Hemlis
 	inline sysMemSimpleAllocator* GetHemlisAllocator() {return m_pHemlisAllocator;}
@@ -234,7 +234,7 @@ public:
 	inline void SetSystemTracker(sysMemSystemTracker& allocator) {m_pSystemTracker = &allocator;}
 #endif // COMMERCE_CONTAINER
 
-#if RSG_DURANGO || RSG_ORBIS || RSG_PC
+#if RSG_DURANGO || RSG_ORBIS || RSG_PC || RSG_LINUX
 	inline sysMemSimpleAllocator* GetReplayAllocator() { return m_pReplayAllocator; }
 	inline void SetReplayAllocator(sysMemSimpleAllocator* pAllocator) { m_pReplayAllocator = pAllocator; }
 #endif

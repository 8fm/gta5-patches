diff --git a/src/dev_ng/rage/scaleform/Src/vcproj/scaleformgfx/CMakeLists.txt b/src/dev_ng/rage/scaleform/Src/vcproj/scaleformgfx/CMakeLists.txt
new file mode 100644
--- /dev/null
+++ b/src/dev_ng/rage/scaleform/Src/vcproj/scaleformgfx/CMakeLists.txt
@@ -0,0 +1,43 @@
+project(ScaleformGfx)
+
+set(TARGET_TYPE "StaticLib")
+include(${CMAKE_SOURCE_DIR}/BuildOptions.cmake)
+
+if (MSVC)
+    add_compile_options(/FI${CMAKE_SOURCE_DIR}/rage/scaleform/rage_forceinclude.h)
+else()
+    add_compile_options(-include${CMAKE_SOURCE_DIR}/rage/scaleform/rage_forceinclude.h)
+    remove_definitions(-DWIN64) # Scaleform don't need WIN64 define in Linux
+endif()
+
+set(SRC_FILES
+    "_Unity/_unity_ScaleformGfx_headers_gkernel_grenderer.cpp"
+    "_Unity/_unity_ScaleformGfx_gfxplayer.cpp"
+    "_Unity/_unity_ScaleformGfx_gfxplayer_sub.cpp"
+    "_Unity/_unity_ScaleformGfx_gfxaudio.cpp"
+    "../../GFxPlayer/IME/GASIme.cpp"
+)
+
+add_library(${PROJECT_NAME} STATIC ${SRC_FILES})
+
+target_include_directories(${PROJECT_NAME} PRIVATE
+    ${CMAKE_SOURCE_DIR}/rage/base/src
+    ${CMAKE_SOURCE_DIR}/rage/base/src/jpeg
+    ${CMAKE_SOURCE_DIR}/rage/base/src/zlib
+    ${CMAKE_SOURCE_DIR}/rage/scaleform/Include
+    ${CMAKE_SOURCE_DIR}/rage/scaleform/Src/GFxAudio
+    ${CMAKE_SOURCE_DIR}/rage/scaleform/Src/GFxPlayer
+    ${CMAKE_SOURCE_DIR}/rage/scaleform/Src/GFxPlayer/AMP
+    ${CMAKE_SOURCE_DIR}/rage/scaleform/Src/GKernel
+    ${CMAKE_SOURCE_DIR}/rage/scaleform/Src/GRenderer
+    ${CMAKE_SOURCE_DIR}/rage/scaleform/Src/GFxAudio
+    ${CMAKE_SOURCE_DIR}/rage/3rdparty/AMD/AMD_ShadowFX/amd_lib/shared/common/inc
+    ${CMAKE_SOURCE_DIR}/rage/base/src
+    ${CMAKE_SOURCE_DIR}/rage/framework/src
+    ${CMAKE_SOURCE_DIR}/rage/naturalmotion/include
+    ${CMAKE_SOURCE_DIR}/rage/naturalmotion/src
+    ${CMAKE_SOURCE_DIR}/rage/script/src
+    ${CMAKE_SOURCE_DIR}/rage/suite/src
+)
+
+target_link_libraries(${PROJECT_NAME})
